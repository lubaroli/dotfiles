!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
;	init.vim	/^nmap ; :$/;"	m
<	init.vim	/^vnoremap < <gv$/;"	m
<C-L>	init.vim	/^nnoremap <C-L> :nohlsearch<CR><C-L>$/;"	m
<Leader>b	init.vim	/^    nnoremap <Leader>b :CtrlPBuffer<CR>$/;"	m
<Leader>h	init.vim	/^    nnoremap <Leader>h :CtrlPMRUFiles<CR>$/;"	m
<Leader>j	init.vim	/^nmap <Leader>j :bprevious<CR>$/;"	m
<Leader>k	init.vim	/^nmap <Leader>k :bnext<CR>$/;"	m
<Leader>n	init.vim	/^    map <Leader>n :NERDTreeToggle<CR>$/;"	m
<Leader>o	init.vim	/^    nnoremap <Leader>o :CtrlP<CR>$/;"	m
<Leader>t	init.vim	/^    nmap <Leader>t :TagbarToggle<CR>$/;"	m
<Leader>w	init.vim	/^nmap <Leader>w :BD!<CR>$/;"	m
<M-h>	init.vim	/^nmap <silent><M-h> :wincmd h<CR>$/;"	m
<M-j>	init.vim	/^nmap <silent><M-j> :wincmd j<CR>$/;"	m
<M-k>	init.vim	/^nmap <silent><M-k> :wincmd k<CR>$/;"	m
<M-l>	init.vim	/^nmap <silent><M-l> :wincmd l<CR>$/;"	m
<c-space>	init.vim	/^    inoremap <silent><expr> <c-space> coc#refresh()$/;"	m
<leader>c	init.vim	/^nnoremap <leader>c :call NumberToggle()<cr>$/;"	m
<leader>lE	init.vim	/^    nmap <silent> <leader>lE :call OniCommand('oni.editor.previousError')<CR>$/;"	m
<leader>lE	init.vim	/^    nmap <silent> <leader>lE <Plug>(coc-diagnostic-prev)$/;"	m
<leader>la	init.vim	/^    nmap <leader>la  <Plug>(coc-codeaction)$/;"	m
<leader>ld	init.vim	/^    nmap <silent> <leader>ld <Plug>(coc-definition)$/;"	m
<leader>le	init.vim	/^    nmap <silent> <leader>le :call OniCommand('oni.editor.nextError')<CR>$/;"	m
<leader>le	init.vim	/^    nmap <silent> <leader>le <Plug>(coc-diagnostic-next)$/;"	m
<leader>lf	init.vim	/^    nmap <leader>lf  <Plug>(coc-fix-current)$/;"	m
<leader>li	init.vim	/^    nmap <silent> <leader>li <Plug>(coc-implementation)$/;"	m
<leader>lk	init.vim	/^    nnoremap <silent> <leader>lk :call CocActionAsync("doHover")<CR>$/;"	m
<leader>lr	init.vim	/^    nmap <leader>lr :call OniCommand('')$/;"	m
<leader>lr	init.vim	/^    nmap <leader>lr <Plug>(coc-rename)$/;"	m
<leader>lr	init.vim	/^    nmap <silent> <leader>lr <Plug>(coc-references)$/;"	m
<leader>ly	init.vim	/^    nmap <silent> <leader>ly <Plug>(coc-type-definition)$/;"	m
<leader>r	init.vim	/^map <silent> <leader>r <Plug>(IPy-Run)$/;"	m
<leader>ra	init.vim	/^map <silent> <leader>ra <Plug>(IPy-RunAll)$/;"	m
<leader>rc	init.vim	/^map <silent> <leader>rc <Plug>(IPy-Complete)$/;"	m
<leader>ri	init.vim	/^map <silent> <leader>ri <Plug>(IPy-Interrupt)$/;"	m
<leader>rt	init.vim	/^map <silent> <leader>rt <Plug>(IPy-Terminate)$/;"	m
>	init.vim	/^vnoremap > >gv$/;"	m
NumberToggle	init.vim	/^function! NumberToggle()$/;"	f
Y	init.vim	/^map Y y\$$/;"	m
custom_term	init.vim	/^augroup custom_term$/;"	a
g:AutoPairsShortcutFastwrap	init.vim	/^let g:AutoPairsShortcutFastwrap='<M-e>'$/;"	v
g:SuperTabClosePreviewOnPopupClose	init.vim	/^    let g:SuperTabClosePreviewOnPopupClose = 1$/;"	v
g:SuperTabDefaultCompletionType	init.vim	/^    let g:SuperTabDefaultCompletionType = "<c-n>"$/;"	v
g:airline#extensions#ale#enabled	init.vim	/^    let g:airline#extensions#ale#enabled = 1$/;"	v
g:airline#extensions#tabline#enabled	init.vim	/^    let g:airline#extensions#tabline#enabled = 1$/;"	v
g:airline_powerline_fonts	init.vim	/^    let g:airline_powerline_fonts = 1$/;"	v
g:airline_theme	init.vim	/^    let g:airline_theme='gruvbox'$/;"	v
g:ctrlp_cache_dir	init.vim	/^    let g:ctrlp_cache_dir = $HOME . '\/.cache\/ctrlp'$/;"	v
g:ctrlp_clear_cache_on_exit	init.vim	/^    let g:ctrlp_clear_cache_on_exit = 1$/;"	v
g:ctrlp_user_command	init.vim	/^      let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'$/;"	v
g:nvim_ipy_perform_mappings	init.vim	/^let g:nvim_ipy_perform_mappings = 0$/;"	v
g:signify_sign_change	init.vim	/^let g:signify_sign_change = '~'$/;"	v
g:signify_sign_delete	init.vim	/^let g:signify_sign_delete = '-'$/;"	v
g:sneak#s_next	init.vim	/^let g:sneak#s_next = 1$/;"	v
g:strip_whitespace_on_save	init.vim	/^let g:strip_whitespace_on_save = 1$/;"	v
mapleader	init.vim	/^let mapleader="\\<space>"$/;"	v
ttimeout	init.vim	/^let ttimeout=10         " Set insermode timeout to 10ms$/;"	v
